// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using fishingCompany.Data;

#nullable disable

namespace fishingCompany.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241209182927_FirstMigaration")]
    partial class FirstMigaration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("fishingCompany.Models.Boat", b =>
                {
                    b.Property<int>("BoatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BoatID"));

                    b.Property<float>("Capacity")
                        .HasMaxLength(255)
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("BoatID");

                    b.ToTable("boats");
                });

            modelBuilder.Entity("fishingCompany.Models.Catch", b =>
                {
                    b.Property<int>("CatchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CatchID"));

                    b.Property<string>("FishType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("FishingTripTripID")
                        .HasColumnType("int");

                    b.Property<int>("TripID")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("double");

                    b.HasKey("CatchID");

                    b.HasIndex("FishingTripTripID");

                    b.ToTable("catches");
                });

            modelBuilder.Entity("fishingCompany.Models.Fisherman", b =>
                {
                    b.Property<int>("FishermanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("FishermanID"));

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("FishermanID");

                    b.ToTable("fishermen");
                });

            modelBuilder.Entity("fishingCompany.Models.FishingTrip", b =>
                {
                    b.Property<int>("TripID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TripID"));

                    b.Property<int>("BoatID")
                        .HasColumnType("int");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("TripDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("TripID");

                    b.HasIndex("BoatID");

                    b.ToTable("fishingTrips");
                });

            modelBuilder.Entity("fishingCompany.Models.Sale", b =>
                {
                    b.Property<int>("SaleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SaleID"));

                    b.Property<int>("CatchID")
                        .HasColumnType("int");

                    b.Property<string>("MarketName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("SalePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SaleID");

                    b.HasIndex("CatchID");

                    b.ToTable("sales");
                });

            modelBuilder.Entity("fishingCompany.Models.Catch", b =>
                {
                    b.HasOne("fishingCompany.Models.FishingTrip", "FishingTrip")
                        .WithMany()
                        .HasForeignKey("FishingTripTripID");

                    b.Navigation("FishingTrip");
                });

            modelBuilder.Entity("fishingCompany.Models.FishingTrip", b =>
                {
                    b.HasOne("fishingCompany.Models.Boat", "Boat")
                        .WithMany()
                        .HasForeignKey("BoatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boat");
                });

            modelBuilder.Entity("fishingCompany.Models.Sale", b =>
                {
                    b.HasOne("fishingCompany.Models.Catch", "Catch")
                        .WithMany()
                        .HasForeignKey("CatchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catch");
                });
#pragma warning restore 612, 618
        }
    }
}
